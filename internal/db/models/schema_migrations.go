// Code generated by BobGen sqlite v0.20.6. DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package model

import (
	"context"

	"github.com/aarondl/opt/null"
	"github.com/stephenafamo/bob"
	"github.com/stephenafamo/bob/dialect/sqlite"
	"github.com/stephenafamo/bob/dialect/sqlite/dialect"
)

// SchemaMigration is an object representing the database table.
type SchemaMigration struct {
	Version null.Val[string] `db:"version" `
	Dirty   null.Val[string] `db:"dirty" `
}

// SchemaMigrationSlice is an alias for a slice of pointers to SchemaMigration.
// This should almost always be used instead of []*SchemaMigration.
type SchemaMigrationSlice []*SchemaMigration

// SchemaMigrationsView contains methods to work with the schema_migrations view
var SchemaMigrationsView = sqlite.NewViewx[*SchemaMigration, SchemaMigrationSlice]("", "schema_migrations")

// SchemaMigrationsQuery is a query on the schema_migrations view
type SchemaMigrationsQuery = *sqlite.ViewQuery[*SchemaMigration, SchemaMigrationSlice]

// SchemaMigrationsStmt is a prepared statment on schema_migrations
type SchemaMigrationsStmt = bob.QueryStmt[*SchemaMigration, SchemaMigrationSlice]

type schemaMigrationColumnNames struct {
	Version string
	Dirty   string
}

var SchemaMigrationColumns = struct {
	Version sqlite.Expression
	Dirty   sqlite.Expression
}{
	Version: sqlite.Quote("schema_migrations", "version"),
	Dirty:   sqlite.Quote("schema_migrations", "dirty"),
}

type schemaMigrationWhere[Q sqlite.Filterable] struct {
	Version sqlite.WhereNullMod[Q, string]
	Dirty   sqlite.WhereNullMod[Q, string]
}

func SchemaMigrationWhere[Q sqlite.Filterable]() schemaMigrationWhere[Q] {
	return schemaMigrationWhere[Q]{
		Version: sqlite.WhereNull[Q, string](SchemaMigrationColumns.Version),
		Dirty:   sqlite.WhereNull[Q, string](SchemaMigrationColumns.Dirty),
	}
}

// SchemaMigrations begins a query on schema_migrations
func SchemaMigrations(ctx context.Context, exec bob.Executor, mods ...bob.Mod[*dialect.SelectQuery]) SchemaMigrationsQuery {
	return SchemaMigrationsView.Query(ctx, exec, mods...)
}
